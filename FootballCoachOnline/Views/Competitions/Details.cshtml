@model FootballCoachOnline.ViewModels.CompetitionStatsMatchesViewModel

@{
    ViewData["Title"] = ViewData["CompetitionName"];
    int i = 1;
    bool done = false;
}

<head>
    <link rel="stylesheet" href="~/css/dizajn.css" />
</head>

<h2>@ViewData["CompetitionName"]</h2>

<div class="container-fluid">
    <div class="row">
        <div class="smalltable col-xs-12 col-sm-12 col-md-8 col-lg-8">
            <table id="myTable" class="table table-striped table-responsive headcenter tablesorter">
                <thead>
                    <tr>
                        <th><a href="#">#</a></th>
                        <th><a href="#">Tim</a></th>
                        <th title="Odigrano"><a href="#">O</a></th>
                        <th title="Pobjede"><a href="#">P</a></th>
                        <th title="NerijeÅ¡ene"><a href="#">N</a></th>
                        <th title="Izgubljene"><a href="#">I</a></th>
                        <th title="Zabijeni golovi"><a href="#">Z</a></th>
                        <th title="Primljeni golovi"><a href="#">P</a></th>
                        <th title="Gol Razlika"><a href="#">R</a></th>
                        <th title="Bodovi"><a href="#">B</a></th>
                    </tr>
                </thead>
                <tbody class="text-center">
                    @foreach (var item in Model.Stats)
                    {
                    <tr>
                        <td>@i</td>
                        <td>@item.Name</td>
                        <td>@item.GamesPlayed</td>
                        <td>@item.Wins</td>
                        <td>@item.Draws</td>
                        <td>@item.Losses</td>
                        <td>@item.GoalsScored</td>
                        <td>@item.GoalsConceded</td>
                        <td>
                            @if ((item.GoalsScored - item.GoalsConceded) > 0)
                            {
                                <span>
                                    +@(item.GoalsScored-item.GoalsConceded)
                                </span>
                            }
                            else
                            {
                                @(item.GoalsScored - item.GoalsConceded)
                            }
                        </td>
                        <td>@item.Points</td>
                    </tr>
                    ++i;
                    }
                </tbody>
            </table>
        </div>

        <br />
        <div class="smalltable matches col-xs-12 col-sm-12 col-md-4 col-lg-4">
            <div>
                <div><b>Utakmice</b></div>
                <div class="scroll">
                    @foreach (var x in Model.Matches)
                    {
                    <button id="@x.First().Matchday" class="btn btn-default btn-sm match">
                        @x.First().Matchday. kolo
                    </button>
                    }
                </div>
            </div>
            @foreach (var days in Model.Matches)
            {
            <table id="@days.First().Matchday x" class="table table-responsive hide-matches @days.First().Matchday toggle-container @((!done && days.Last().Date >= DateTime.Now.Date) ? "next" : "")">
                @if (days.Last().Date >= DateTime.Now.Date) { done = true; }
                <thead class="">
                    <tr>
                        <th>
                            @Html.DisplayFor(model => days.Last().Matchday). kolo
                        </th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in days.OrderBy(d => d.Date))
                    {
                    <tr class="text-center">
                        <td class="col-xs-4">
                            @Html.DisplayFor(modelItem => item.Team1.Name)
                        </td>
                        @if (item.Played)
                        {
                            <td class="col-xs-2">
                                @Html.DisplayFor(modelItem => item.MatchScore.Score1) -
                                @Html.DisplayFor(modelItem => item.MatchScore.Score2)
                            </td>
                        }
                        else
                        {
                            <td class="col-xs-2">: - :</td>
                        }
                        <td class="col-xs-4">
                            @Html.DisplayFor(modelItem => item.Team2.Name)
                        </td>
                        <td class="col-xs-2">
                            @item.Date.ToString("d")
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            }
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Natrag na listu</a> |
    <a asp-controller="Matches" asp-action="Create" asp-route-id="@ViewBag.CompetitionId">Dodaj novu utakmicu</a>
</div>


@section scripts {
    <script>
        $(function () {
            // add new widget called indexFirstColumn
            $.tablesorter.addWidget({
                // give the widget a id
                id: "indexFirstColumn",
                // format is called when the on init and when a sorting has finished
                format: function (table) {
                    // loop all tr elements and set the value for the first column  
                    $(table).find("tr td:first-child").each(function (index) {
                        $(this).text(index + 1);
                    })
                }
            });

            $("#myTable").tablesorter({
                widgets: ['zebra', 'indexFirstColumn']
            });
        });
    </script>

    <script>
        var selected;
        var i = 0;

        $('.toggle-container').ready(function () {
            $('.next').show();

            var a = $('.next').attr('id').split(' ')[0];
            $('#' + a).removeClass('btn-primary');
            $('#' + a).addClass('btn-primary');
            selected = a;
        });

        jQuery(".match").click(function () {
            var id = jQuery(this).attr("id");
            $('#' + selected).removeClass('btn-primary');
            if (selected != id) {
                $('#' + id).addClass('btn-primary');
                selected = id;
            }
            else {
                selected = 0;
            }
            var toggled = $('.' + id);
            $('.toggle-container').not(toggled).hide();
            toggled.toggle();
        });
    </script>
}