@model FootballCoachOnline.ViewModels.CompetitionStatsMatchesViewModel

@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = ViewData["CompetitionName"];
    int i = 1;
    bool done = false;
}

<head>
    <link rel="stylesheet" href="~/css/dizajn.css"/>
</head>

<h2>@ViewData["CompetitionName"]</h2>

<div class="container-fluid">
    <div class="row">
        <div class="smalltable col-xs-12 col-sm-12 col-md-8 col-lg-8">
            <button id="tablePDF" class="btn btn-default" title="skini tablicu u PDF-u">
                <span class="glyphicon glyphicon-print"></span>
            </button>
            <table id="myTable" class="table table-striped table-responsive headcenter tablesorter">
                <thead>
                <tr>
                    <th><a href="#">#</a></th>
                    <th><a href="#">Tim</a></th>
                    <th title="Odigrano"><a href="#">O</a></th>
                    <th title="Pobjede"><a href="#">P</a></th>
                    <th title="Neriješene"><a href="#">N</a></th>
                    <th title="Izgubljene"><a href="#">I</a></th>
                    <th title="Zabijeni golovi"><a href="#">Z</a></th>
                    <th title="Primljeni golovi"><a href="#">P</a></th>
                    <th title="Gol Razlika"><a href="#">R</a></th>
                    <th title="Bodovi"><a href="#">B</a></th>
                </tr>
                </thead>
                <tbody class="text-center">
                @foreach (var item in Model.Stats)
                {
                    <tr>
                        <td>@i</td>
                        <td>@item.Name</td>
                        <td>@item.GamesPlayed</td>
                        <td>@item.Wins</td>
                        <td>@item.Draws</td>
                        <td>@item.Losses</td>
                        <td>@item.GoalsScored</td>
                        <td>@item.GoalsConceded</td>
                        <td>
                            @if ((item.GoalsScored - item.GoalsConceded) > 0)
                            {
                                <span>
                                    +@(item.GoalsScored - item.GoalsConceded)
                                </span>
                            }
                            else
                            {
                                @(item.GoalsScored - item.GoalsConceded)
                            }
                        </td>
                        <td>@item.Points</td>
                    </tr>
                    ++i;
                }
                </tbody>
            </table>
        </div>

        <br />
        <div class="smalltable details col-xs-12 col-sm-12 col-md-4 col-lg-4">
            <div>
                <div class="title">Utakmice</div>
                <div class="scroll">
                    @foreach (var x in Model.Matches)
                    {
                    <button id="@x.First().Matchday" class="btn btn-default btn-sm match">
                        @x.First().Matchday. kolo
                    </button>
                    }
                </div>
            </div>
            @foreach (var days in Model.Matches)
            {
            <table id="@days.First().Matchday x" class="table table-responsive hide-matches @days.First().Matchday toggle-container @((!done && days.Last().Date >= DateTime.Now.Date) ? "next" : "")">
                @if (days.Last().Date >= DateTime.Now.Date) { done = true; }
                <thead class="">
                    <tr>
                        <th>
                            @Html.DisplayFor(model => days.Last().Matchday). kolo
                        </th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in days.OrderBy(d => d.Date))
                    {
                    <tr class="text-center">
                        <td class="col-xs-4">
                            @Html.DisplayFor(modelItem => item.Team1.ShortName)
                        </td>
                        @if (item.Played)
                        {
                            <td class="col-xs-2">
                                @Html.DisplayFor(modelItem => item.MatchScore.Score1) -
                                @Html.DisplayFor(modelItem => item.MatchScore.Score2)
                            </td>
                        }
                        else
                        {
                            <td class="col-xs-2">: - :</td>
                        }
                        <td class="col-xs-4">
                            @Html.DisplayFor(modelItem => item.Team2.ShortName)
                        </td>
                        <td class="col-xs-2">
                            @item.Date.ToString("d")
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <h4 class="title">Najbolji strijelci</h4>
            <table class="table table-condensed text-center">
                <tbody>
                    <tr>
                        <td>Ivan Horvat</td>
                        <td>Klub</td>
                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Miran Babić</td>
                        <td>Vikinzi</td>
                        <td>2</td>
                    </tr>
                    <tr>
                        <td>Ivan Tulić</td>
                        <td>Orlovi</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Robert Horvat</td>
                        <td>Dream Team</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Ante Marić</td>
                        <td>Tigrovi</td>
                        <td>1</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            <h4 class="title">Žuti kartoni</h4>
            <table class="table table-condensed">
                <tbody>
                    <tr>
                    <tr>
                        <td>Sebastijan Murić</td>
                        <td>Lavovi</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Matej Mesić</td>
                        <td>Tigrovi</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Ivan Tulić</td>
                        <td>Orlovi</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Luka Kovač</td>
                        <td>Vikinzi</td>
                        <td>1</td>
                    </tr>
                    <tr>
                        <td>Mirko Štimac</td>
                        <td>Dream Team</td>
                        <td>1</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            <h4 class="title">Crveni kartoni</h4>
            <table class="table table-condensed">
                <tbody>
                    <tr>
                        <td>Marino Šibić</td>
                        <td>Lavovi</td>
                        <td>1</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="btn-group">
    <a asp-controller="Competitions" asp-action="Index" class="btn btn-default">
        <span class="glyphicon glyphicon-backward"></span> Lista natjecanja
    </a>
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-controller="Matches" asp-action="Create" asp-route-id="@ViewBag.CompetitionId" class="btn btn-default">
            <span class="glyphicon glyphicon-plus"></span> Nova utakmica
    </a>
    }
</div>


@section scripts {
    <script>
        $(function() {
            // add new widget called indexFirstColumn
            $.tablesorter.addWidget({
                // give the widget a id
                id: "indexFirstColumn",
                // format is called when the on init and when a sorting has finished
                format: function(table) {
                    // loop all tr elements and set the value for the first column  
                    $(table).find("tr td:first-child").each(function(index) {
                        $(this).text(index + 1);
                    })
                }
            });

            $("#myTable").tablesorter({
                widgets: ['zebra', 'indexFirstColumn']
            });
        });
    </script>

    <script>
        var selected;
        var i = 0;

        $('.toggle-container').ready(function() {
            $('.next').show();

            var a = $('.next').attr('id').split(' ')[0];
            $('#' + a).removeClass('btn-danger');
            $('#' + a).addClass('btn-danger');
            selected = a;
        });

        jQuery(".match").click(function() {
            var id = jQuery(this).attr("id");
            $('#' + selected).removeClass('btn-danger');
            if (selected != id) {
                $('#' + id).addClass('btn-danger');
                selected = id;
            } else {
                selected = 0;
            }
            var toggled = $('.' + id);
            $('.toggle-container').not(toggled).hide();
            toggled.toggle();
        });
    </script>

    <script>
        $('#tablePDF').click(function() {
            $.get('@Url.Action("GetTable", "Competitions", new {id = ViewBag.competitionId})', function(externalData) {
            
                var externalDataRetrievedFromServer = externalData;
        
                function buildTableBody(data, columns) {
                    var body = [];
    
                    //header
                    body.push([
                        { text: '#', style: 'header', alignment: 'center', fillColor: '#f4f4f4' },
                        {text: 'Klub', style: 'header', alignment: 'center', fillColor: '#f4f4f4'},
                        {text: 'Utakmica', style: 'header', alignment: 'center', fillColor: '#f4f4f4'},
                        {text: 'Pobjeda', style: 'header', alignment: 'center', fillColor: '#f4f4f4'},
                        {text: 'Neriješenih', style: 'header', alignment: 'center', fillColor: '#f4f4f4'},
                        {text: 'Izgubljenih', style: 'header', alignment: 'center', fillColor: '#f4f4f4'},
                        { text: 'Razlika', style: 'header', alignment: 'center', fillColor: '#f4f4f4' },
                        {text: 'Bodovi', style: 'header', alignment: 'center', fillColor: '#f4f4f4'}
                    ]);
   
                    data.forEach(function(row) {
                        var dataRow = [];
    
                        columns.forEach(function(column) {
                            dataRow.push(row[column].toString());
                        });
    
                        body.push(dataRow);
                    });
    
                    return body;
                };
    
                function table(data, columns) {
                    return {
                        'alignment': 'center',
                        table: {
                            headerRows: 1,
                            body: buildTableBody(data, columns)
                        }
                    };
                };

                var title = "@Html.Raw(ViewBag.CompetitionName), " + $.datepicker.formatDate('dd.mm.yy', new Date()).toString();
                var docDefinition = {
                    content: [
                        { text: title, style: 'header' },
                        table(externalDataRetrievedFromServer, ['pozicija', 'klub', 'utakmice', 'pobjede', 'neriješene', 'izgubljene', 'razlika', 'bodovi'])
                    ],
                    styles: {
                        header: {
                            bold: true
                        }
                    }
                };
            
                var pdf = pdfMake.createPdf(docDefinition);
                pdf.download('tablica.pdf');
            });
        });

//        $.get('@Url.Action("GetTable", "Competitions", new {id = ViewBag.competitionId})',
//            function(data) {
//
//                var docDefinition = {
//                    content: [
//                        {
//                            table: {
//                                // headers are automatically repeated if the table spans over multiple pages
//                                // you can declare how many rows should be treated as headers
//                                headerRows: 1,
//                                widths: ['*', 'auto', 100, '*'],
//
//                                body: [data]
//                            }
//                        }
//                    ]
//                };
//
//
//                $('#tablePDF').click(function() {
//                    var pdf = pdfMake.createPdf(docDefinition);
//                    pdf.download('tablica.pdf');
//                });
//            });
    </script>
}